class Solution {

    public boolean isPossible(int[] A,int N,int students,int pages)
    {
        int sum=0;
        int count=0;
        
        for(int i=0;i<N;i++)
        {
            if(sum+A[i]>pages)
            {
                count++;
                sum=A[i];
                
                if(A[i]>pages)
                {
                    return false;
                }
            }
            else{
                sum+=A[i];
            }
        }
        
        if(count<students)
        {
            return true;
        }
        
        return false;
    }
    
    public int BinarySearch(int[] A,int N,int M,int start,int end)
    {
        int mid=start+(end-start)/2;
        int ans=-1;
        
        while(start<=end)
        {
            if(isPossible(A,N,M,mid))
            {
                ans=mid;
                end=mid-1;
            }
            else{
                start=mid+1;
            }
            mid=start+(end-start)/2;
        }
        return ans;
    }
    

    public int splitArray(int[] A, int k) {
        int N=A.length;

        int M=k;
        
        if(M>N)
        {
            return -1;
        }
        
        int sum=0;
        int minimum=Integer.MAX_VALUE;
        for(int i=0;i<A.length;i++)
        {
            sum+=A[i];
            
            if(A[i]<minimum)
            {
                minimum=A[i];
            }
        }
        
        return BinarySearch(A,N,M,minimum,sum);
    }
}
