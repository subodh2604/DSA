/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int[] nextLargerNodes(ListNode head) {
        int count=0;
        ListNode curr=head;

        while(curr!=null)
        {
            curr=curr.next;
            count++;
        }


        int[] arr=new int[count];
        int[] ans=new int[count];
        curr=head;

        for(int i=0;i<count;i++)
        {
            arr[i]=curr.val;
            curr=curr.next;
        }

        Stack<Integer> stk=new Stack<>();

        for(int i=count-1;i>=0;i--)
        {
            while(!stk.isEmpty() && stk.peek()<=arr[i])
            {
                stk.pop();
            }

            if(!stk.isEmpty())
            {
                ans[i]=stk.peek();
            }
            else{
                ans[i]=0;
            }
            stk.push(arr[i]);
        }

        return ans;
    }
}
