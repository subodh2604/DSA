/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int checkIsBalanced(TreeNode root)
    {
        if(root==null)
        {
            return 0;
        }

        int left=checkIsBalanced(root.left);
        int right=checkIsBalanced(root.right);

        if(left!=Integer.MAX_VALUE && right!=Integer.MAX_VALUE)
        {
            if((Math.max(left,right)-Math.min(left,right))<=1)
            {
                return Math.max(left,right)+1;
            }
        }

        return Integer.MAX_VALUE;
    }
    public boolean isBalanced(TreeNode root) {
        int ans=0;

        ans=checkIsBalanced(root);

        if(ans==Integer.MAX_VALUE)
        {
            return false;
        }

        return true;
    }
}
